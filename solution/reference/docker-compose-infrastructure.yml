version: "3"

services:

  registry:
    image: bitnami/zookeeper:3.6.1
    container_name: ${SOLUTION}-registry
    ports:
      - 1001:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  channel:
    image: bitnami/kafka:2.5.0
    container_name: ${SOLUTION}-channel
    ports:
      - 1002:9092
      - 1003:9093
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=registry:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://channel:9092,PLAINTEXT_HOST://${DOCKER_MACHINE_IP}:${KAFKA_BOOTSTRAP_SERVERS_PORT}
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://channel:9092,PLAINTEXT_HOST://${DOCKER_MACHINE_IP}:${KAFKA_BOOTSTRAP_SERVERS_PORT}
      # - KAFKA_LISTENERS=PLAINTEXT://channel:9092,PLAINTEXT_HOST://${DOCKER_MACHINE_IP}:${KAFKA_BOOTSTRAP_SERVERS_PORT}
      # - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://channel:9092,PLAINTEXT_HOST://${DOCKER_MACHINE_IP}:${KAFKA_BOOTSTRAP_SERVERS_PORT}
    depends_on:
      - registry
    volumes:
      - kafkadata:/bitnami/kafka

  rdbms:
    image: postgres:13.2
    container_name: ${SOLUTION}-rdbms
    environment:
      POSTGRES_USER: $POSTGRES_USERNAME
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    ports:
      - "1004:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init_script/flowable-postgres-init.sql:/docker-entrypoint-initdb.d/flowable-init.sql:ro
      - ./init_script/keycloak-postgres-init.sql:/docker-entrypoint-initdb.d/keycloak-init.sql:ro

  iam:
    image: quay.io/keycloak/keycloak:latest
    container_name: ${SOLUTION}-iam
    ports:
      - 1005:8080
    environment:
      - KEYCLOAK_USER=$KEYCLOAK_USERNAME
      - KEYCLOAK_PASSWORD=$KEYCLOAK_PASSWORD
      - DB_VENDOR=postgres
      - DB_ADDR=rdbms
      - DB_PORT=5432
      - DB_DATABASE=keycloak
      - DB_SCHEMA=keycloak
      - DB_USER=$POSTGRES_USERNAME
      - DB_PASSWORD=$POSTGRES_PASSWORD

  storage:
    image: mongo:4.2.7
    container_name: ${SOLUTION}-storage
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_PASSWORD
    ports:
      - "1006:27017"
    volumes:
      - mongodata:/data/db
      - ./init_script/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

  index:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
    container_name: ${SOLUTION}-index
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - ELASTIC_PASSWORD=$ELASTIC_PASSWORD
      - xpack.security.enabled=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      # the `esdata` dir permission should be 777
      - esdata:/usr/share/elasticsearch/data
    ports:
      - 1007:9200

  mail:
    image: juanluisbaptiste/postfix:latest
    container_name: ${SOLUTION}-postfix
    ports:
      - 1009:25
      - 1010:587
    environment:
      - SMTP_SERVER=smtp.gmail.com
      - SMTP_PORT=465
      - SERVER_HOSTNAME=sangihekab.go.id
      - SMTP_USERNAME=$POSTFIX_USERNAME
      - SMTP_PASSWORD=$POSTFIX_PASSWORD

  dashboard:
    image: elastic/kibana:7.6.2
    container_name: ${SOLUTION}-kibana
    depends_on:
      - index
    environment:
      SERVER_NAME: kibana
      ELASTICSEARCH_HOSTS: http://index:9200
      ELASTICSEARCH_USERNAME: ${ELASTIC_USERNAME}
      ELASTICSEARCH_PASSWORD: ${ELASTIC_PASSWORD}
    ports:
      - "1008:5601"
    volumes:
      - kibanadata:/var/lib/kibana/data

volumes:
  pgdata:
    driver: local
  kafkadata:
    driver: local
  mongodata:
    driver: local
  esdata:
    driver: local
  kibanadata:
    driver: local
