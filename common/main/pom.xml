<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.devit.mscore</groupId>
    <artifactId>parent</artifactId>
    <version>1.4</version>
  </parent>

  <artifactId>main</artifactId>
  <packaging>pom</packaging>
  <name>MS Core :: Main :: Parent</name>
  <description>Parent for service project</description>

  <properties>
    <assembly.mainClass>com.devit.mscore.Main</assembly.mainClass>

    <owner.name>dkakunsi</owner.name>
    <group.name>mscore</group.name>
    <component.name>${project.artifactId}</component.name>
    <docker.output.dir>${project.basedir}/docker</docker.output.dir>

    <maven-assembly-plugin.version>3.3.0</maven-assembly-plugin.version>
    <docker-maven-plugin.version>0.40.2</docker-maven-plugin.version>

    <library.version>[1.4.70-SNAPSHOT,)</library.version>

    <sonar.java.checkstyle.reportPaths>${maven.multiModuleProjectDirectory}/service/target/checkstyle-result.xml</sonar.java.checkstyle.reportPaths>
    <sonar.java.pmd.reportPaths>${maven.multiModuleProjectDirectory}/service/target/pmd.xml</sonar.java.pmd.reportPaths>
    <sonar.java.spotbugs.reportPaths>${maven.multiModuleProjectDirectory}/service/target/spotbugsXml.xml</sonar.java.spotbugs.reportPaths>
    <sonar.coverage.jacoco.xmlReportPaths>
      ${maven.multiModuleProjectDirectory}/service/target/site/jacoco-aggregate/jacoco.xml,
      ${maven.multiModuleProjectDirectory}/service/target/site/jacoco/jacoco.xml
    </sonar.coverage.jacoco.xmlReportPaths>
    <sonar.coverage.exclusions>**/*Exception*,**/ApplicationStarter.java,**/Main.java</sonar.coverage.exclusions>
  </properties>

  <build>
    <pluginManagement>
      <plugins>
        <!-- Disable JAR plugin. This will be generated by maven assembly plugin -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <executions>
            <execution>
              <id>default-jar</id>
              <phase>none</phase>
              <configuration>
                <finalName>unwanted</finalName>
                <classifier>unwanted</classifier>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <!-- Generate the jar artefact with name: app.jar -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>${maven-assembly-plugin.version}</version>
          <configuration>
            <finalName>app</finalName>
            <archive>
              <manifest>
                <mainClass>${assembly.mainClass}</mainClass>
              </manifest>
            </archive>
            <descriptorRefs>
              <descriptorRef>jar-with-dependencies</descriptorRef>
            </descriptorRefs>
            <appendAssemblyId>false</appendAssemblyId>
          </configuration>
          <executions>
            <execution>
              <id>make-assembly</id>
              <phase>package</phase>
              <goals>
                <goal>single</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <!-- Do not need to install the service artefact -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <executions>
            <execution>
              <id>default-install</id>
              <phase>none</phase>
            </execution>
          </executions>
        </plugin>
        <!-- Do not need to deploy service jar -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <configuration>
            <skip>true</skip>
          </configuration>
        </plugin>
        <!-- Create docker image -->
        <plugin>
          <groupId>io.fabric8</groupId>
          <artifactId>docker-maven-plugin</artifactId>
          <version>${docker-maven-plugin.version}</version>
          <configuration>
            <outputDirectory>${docker.output.dir}</outputDirectory>
            <images>
              <image>
                <name>${owner.name}/${group.name}-${component.name}</name>
                <build>
                  <dockerFile>${project.build.directory}/Dockerfile</dockerFile>
                  <tags>
                    <tag>latest</tag>
                    <tag>${project.version}</tag>
                  </tags>
                </build>
              </image>
            </images>
          </configuration>
          <executions>
            <execution>
              <id>build docker image</id>
              <phase>package</phase>
              <goals>
                <goal>build</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <!--This plugin's configuration is used to store Eclipse m2e settings only. -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>${maven-eclipse-plugin.version}</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <versionRange>[1.0,)</versionRange>
                    <goals>
                      <goal>unpack</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <execute />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <executions>
          <execution>
            <id>checkstyle-report</id>
            <phase>verify</phase>
            <goals>
              <goal>checkstyle-aggregate</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <executions>
          <execution>
            <id>pmd-aggregate</id>
            <phase>verify</phase>
            <goals>
              <goal>aggregate-pmd</goal>
              <goal>aggregate-cpd</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>jacoco-report-aggregate</id>
            <phase>verify</phase>
            <goals>
              <goal>report-aggregate</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
      </plugin>
    </plugins>
  </reporting>

  <profiles>
    <profile>
      <id>enable-docker</id>
      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>