name: Reference Solution

on:
  push:
    branches:
      - master
    paths:
      - "!solution/scripts/**"
      - "!solution/reference/**"
      - "!solution/README.MD"
      - "!solution/.gitignore"
  workflow_dispatch: # enable manual build
    inputs:
      services:
        description: 'Service to build'
        required: false
        type: choice
        options:
        - all
        - configuration
        - data
        - gateway
        - history
        - logger
        - notification
        - workflow

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Get Latest Tag
      id: latestTag
      run: echo "::set-output name=tag::$(git describe --tags --abbrev=0)"

    - name: Set Image Version
      uses: allenevans/set-env@v2.0.0
      with:
        VERSION_NUMBER: ${{ steps.latestTag.outputs.tag }}

    - name: Print Version Number
      run: echo "Version number is $VERSION_NUMBER"

    - name: Log in to Docker Hub
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push reference data service docker image
      if: ${{ inputs.services == 'data' || inputs.services == 'all' }}
      uses: docker/build-push-action@v3.1.1
      with:
        context: "solution/data"
        file: "solution/data/Dockerfile"
        push: true
        tags: |
          devit16/ref-data:${{ env.VERSION_NUMBER }}
          devit16/ref-data:latest

    - name: Build and push reference gateway service docker image
      if: ${{ inputs.services == 'gateway' || inputs.services == 'all' }}
      uses: docker/build-push-action@v3.1.1
      with:
        context: "solution/gateway"
        file: "solution/gateway/Dockerfile"
        push: true
        tags: |
          devit16/ref-gateway:${{ env.VERSION_NUMBER }}
          devit16/ref-gateway:latest

    - name: Build and push reference history service docker image
      if: ${{ inputs.services == 'history' || inputs.services == 'all' }}
      uses: docker/build-push-action@v3.1.1
      with:
        context: "solution/history"
        file: "solution/history/Dockerfile"
        push: true
        tags: |
          devit16/ref-history:${{ env.VERSION_NUMBER }}
          devit16/ref-history:latest

    - name: Build and push reference notification service docker image
      if: ${{ inputs.services == 'notification' || inputs.services == 'all' }}
      uses: docker/build-push-action@v3.1.1
      with:
        context: "solution/notification"
        file: "solution/notification/Dockerfile"
        push: true
        tags: |
          devit16/ref-notification:${{ env.VERSION_NUMBER }}
          devit16/ref-notification:latest

    - name: Build and push reference workflow service docker image
      if: ${{ inputs.services == 'workflow' || inputs.services == 'all' }}
      uses: docker/build-push-action@v3.1.1
      with:
        context: "solution/workflow"
        file: "solution/workflow/Dockerfile"
        push: true
        tags: |
          devit16/ref-workflow:${{ env.VERSION_NUMBER }}
          devit16/ref-workflow:latest

    - name: Build and push reference logger service docker image
      if: ${{ inputs.services == 'logger' || inputs.services == 'all' }}
      uses: docker/build-push-action@v3.1.1
      with:
        context: "solution/logger"
        file: "solution/logger/Dockerfile"
        push: true
        tags: |
          devit16/ref-log:${{ env.VERSION_NUMBER }}
          devit16/ref-log:latest

    - name: Init configuration file
      if: ${{ inputs.services == 'configuration' || inputs.services == 'all' }}
      working-directory: solution/configuration
      run: sh ./load.sh

    - name: Build and push reference configuration service docker image
      if: ${{ inputs.services == 'configuration' || inputs.services == 'all' }}
      uses: docker/build-push-action@v3.1.1
      with:
        context: "solution/configuration"
        file: "solution/configuration/Dockerfile"
        push: true
        tags: |
          devit16/ref-configuration:${{ env.VERSION_NUMBER }}
          devit16/ref-configuration:latest
